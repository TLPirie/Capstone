// Generated by CoffeeScript 1.12.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.SubjectListView = (function(superClass) {
    extend(SubjectListView, superClass);

    function SubjectListView() {
      return SubjectListView.__super__.constructor.apply(this, arguments);
    }

    SubjectListView.prototype.template = '<div> <h2>What&#39s Next?</h2> <div class="scrollBox"> <tbody> <table class="table"> </table> </tbody> </div> </div>';

    SubjectListView.prototype.initialize = function() {
      return this.render();
    };

    SubjectListView.prototype.events = {
      "click .btn": function(e) {
        if (e.currentTarget.classList[0] !== 'notseen') {
          this.newRating(e.currentTarget.id, e.currentTarget.classList[0]);
        }
        return this.$('#' + e.currentTarget.id).hide('slow');
      }
    };

    SubjectListView.prototype.newRating = function(id, like) {
      console.log('id', id, like);
      return this.trigger('newRating', {
        id: id,
        like: like
      });
    };

    SubjectListView.prototype.render = function() {
      var index, subject, ref, results;
      this.$el.append(this.template);
      ref = _.shuffle(this.model.userObj.allSubjects);
      results = [];
      for (index in ref) {
        subject = ref[index];
        results.push(this.$('.table').append('<tr id="' + subject.id + '"><td>' + subject.name + '</td> <td> <button type="button" class="liked btn btn-success btn-xs" id="' + subject.id + '"><i class="icon-thumbs-up"></i></button> <button type="button" class="disliked btn btn-danger btn-xs" id="' + subject.id + '"><i class="icon-thumbs-down"></i></button> <button type="button" class="notseen btn btn-warning btn-xs" id="' + subject.id + '"><i class="icon-archive"></i></button> </td> </tr>'));
      }
      return results;
    };

    return SubjectListView;

  })(Backbone.View);

}).call(this);
